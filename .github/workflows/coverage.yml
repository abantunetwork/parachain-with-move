name: Extra
on:
  pull_request:
  push:
    branches:
      - master

env:
  RUSTUP_MAX_RETRIES: 10
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    name: "Coverage"
    runs-on: ${{ matrix.cfg.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        cfg:
          - os: self-hosted
            grcov:
              version: tags/v0.8.6
              file: grcov-v0.8.6-x86_64-unknown-linux-gnu.tar.gz
            dove: 1.5.5

    env:
      SKIP_WASM_BUILD: 1
      CARGO_INCREMENTAL: 0
      # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off"
      # RUSTDOCFLAGS: "-Cpanic=abort"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        # uses: actions-rs/toolchain@v1
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        with:
          profile: minimal
          override: true

      - name: cache
        uses: actions/cache@v2
        with:
          path: ~/.dove
          key: ${{ matrix.cfg.os }}-dove-${{ matrix.cfg.dove }}

      - name: get Dove
        uses: pontem-network/get-dove@main
        with:
          prerelease: true
          version: ${{ matrix.cfg.dove }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build test resources
        run: make assets

      - id: coverage
        name: coverage analysis with tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          # version: 0.15.0 / latest
          out-type: Xml
          run-types: Tests
          args: -- --test-threads=1 --workspace

      - name: debug
        run: |
          ls .
          ls ./target/
          ls ./target/release/

      # - name: make report artifact
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: code-coverage-report.html
      #     path: ${{ steps.coverage_html.outputs.report }}

      # - name: make report artifact
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: code-coverage-report.lcov
      #     path: ${{ steps.coverage.outputs.report }}

      # - name: upload report to Coveralls
      #   uses: coverallsapp/github-action@v1.1.2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: ${{ steps.coverage.outputs.report }}
